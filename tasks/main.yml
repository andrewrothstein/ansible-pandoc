---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for install in {{ pandoc_install_dir }}...
  become: true
  ansible.builtin.stat:
    path: '{{ pandoc_install_dir }}'
  register: pandoc_binary
- name: Downloading and installing pandoc
  when: not pandoc_binary.stat.exists
  block:
    - name: Downloading {{ pandoc_url }} to {{ pandoc_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ pandoc_url }}'
        dest: '{{ pandoc_tmp_archive }}'
        mode: '644'
        checksum: '{{ pandoc_checksum }}'
    - name: Unarchiving {{ pandoc_tmp_archive }} to {{ pandoc_parent_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ pandoc_tmp_archive }}'
        dest: '{{ pandoc_parent_install_dir }}'
        creates: '{{ pandoc_install_dir }}'
  always:
    - name: Rm {{ pandoc_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ pandoc_tmp_archive }}'
- name: Linking executables in {{ pandoc_install_dir }}/bin to {{ pandoc_parent_install_dir }}/bin
  become: true
  become_user: root
  with_items:
    - pandoc
  ansible.builtin.file:
    src: '{{ pandoc_install_dir }}/bin/{{ item }}'
    dest: '{{ pandoc_parent_install_dir }}/bin/{{ item }}'
    state: link
