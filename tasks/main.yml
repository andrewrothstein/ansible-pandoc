---
- include_role:
    name: andrewrothstein.unarchivedeps
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: check for install in {{ pandoc_install_dir }}...
  become: true
  stat:
    path: '{{ pandoc_install_dir }}'
  register: pandoc_binary
- when: not pandoc_binary.stat.exists
  block:
    - name: downloading {{ pandoc_url }} to {{ pandoc_tmp_archive }}
      become: true
      become_user: root
      get_url:
        url: '{{ pandoc_url }}'
        dest: '{{ pandoc_tmp_archive }}'
        mode: 0644
        checksum: '{{ pandoc_checksum }}'
    - name: unarchiving {{ pandoc_tmp_archive }} to {{ pandoc_parent_install_dir }}
      become: true
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ pandoc_tmp_archive }}'
        dest: '{{ pandoc_parent_install_dir }}'
        creates: '{{ pandoc_install_dir }}'
  always:
    - name: rm {{ pandoc_tmp_archive }}
      become: true
      become_user: root
      file:
        path: '{{ pandoc_tmp_archive }}'
- name: linking executables in {{ pandoc_install_dir }}/bin to {{ pandoc_parent_install_dir }}/bin
  become: true
  become_user: root
  with_items:
    - pandoc
  file:
    src: '{{ pandoc_install_dir }}/bin/{{ item }}'
    dest: '{{ pandoc_parent_install_dir }}/bin/{{ item }}'
    state: link
